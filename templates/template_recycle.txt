
INSERT INTO &&ENV_LDR.${INSERT_TABLE}
(${TGT_COLUMNS})

SELECT
	${SEL_STATEMENTS}
    ,${REC_ID} AS RCORD_ID
	,'I' AS REC_IND
	,SESS.EXECUTION_SESSION_ID 	
	,SESS.EXECUTION_SESSION_ID
	,CASE WHEN (${RECYCLE_IND}) THEN 'Y' ELSE 'N' END AS RECYCLE_FLAG,                  
	(${RECYCLE_FLAGS}) AS RECYCLE_REASON,
	SRC.SRC_TAB_KEY AS SRC_TAB_KEY,                   
	SRC.SRC_TAB_NAME AS SRC_TAB_NAME,                  
	SRC.SRC_COL_NAME AS SRC_COL_NAME,                  
	SRC.CDC_TIMESTAMP AS RECYCLE_CDC_TIMESTAMP

FROM
	(
		SELECT * FROM
		
		(
			SELECT ${SRC_COLUMNS}
			,'No Info in SMX' AS SRC_TAB_KEY,'${SRC_TABLE}' AS SRC_TAB_NAME,	'${SRC_COLUMNS}' AS SRC_COL_NAME
			FROM &&ENV_STAGE.${SRC_TABLE} SRC 
			${WHERE_COND}
			
			UNION ALL
			
			SELECT ${SRC_COLUMNS}
			,'No Info in SMX' AS SRC_TAB_KEY,'${SRC_TABLE}' AS SRC_TAB_NAME,	'${SRC_COLUMNS}' AS SRC_COL_NAME
			FROM &&ENV_STAGE_RECYCLE.${RECYCLE_SRC_TABLE} SRC 
			${WHERE_COND}
			
		) AA
        
		QUALIFY ROW_NUMBER() OVER (${QUALIFY_COND})=1
	) SRC

	${JOIN_CONDITIONS}
	
    CROSS JOIN
	MAX_EXECUTION_SESSION_ID SESS;